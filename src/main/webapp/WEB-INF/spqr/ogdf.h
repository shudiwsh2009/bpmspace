/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class nl_tue_tm_is_graph_SPQRTree */

#ifndef _Included_nl_tue_tm_is_graph_SPQRTree
#define _Included_nl_tue_tm_is_graph_SPQRTree
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    createGraph
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_createGraph
  (JNIEnv *, jclass);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    addNode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_addNode
  (JNIEnv *, jclass, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    addEdge
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_addEdge
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    createSPQRTree
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_createSPQRTree__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    createSPQRTree
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_createSPQRTree__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrRootNode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrRootNode
  (JNIEnv *, jclass, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrChildNodes
 * Signature: (III)[I
 */
JNIEXPORT jintArray JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrChildNodes
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrPertinentGraph
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrPertinentGraph
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrPertinentNodes
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrPertinentNodes
  (JNIEnv *, jclass, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrPertinentEdges
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrPertinentEdges
  (JNIEnv *, jclass, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrPertinentOriginalNode
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrPertinentOriginalNode
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrPertinentEdgeOriginalNodes
 * Signature: (II)[I
 */
JNIEXPORT jintArray JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrPertinentEdgeOriginalNodes
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrPertinentReferenceEdge
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrPertinentReferenceEdge
  (JNIEnv *, jclass, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrPertinentSkeletonReferenceEdge
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrPertinentSkeletonReferenceEdge
  (JNIEnv *, jclass, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrSkeleton
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrSkeleton
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrSkeletonNodes
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrSkeletonNodes
  (JNIEnv *, jclass, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrSkeletonEdges
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrSkeletonEdges
  (JNIEnv *, jclass, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrSkeletonOriginalNode
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrSkeletonOriginalNode
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrSkeletonEdgeOriginalNodes
 * Signature: (II)[I
 */
JNIEXPORT jintArray JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrSkeletonEdgeOriginalNodes
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrSkeletonEdgeIsVirtual
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrSkeletonEdgeIsVirtual
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     nl_tue_tm_is_graph_SPQRTree
 * Method:    spqrNodeType
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_nl_tue_tm_is_graph_SPQRTree_spqrNodeType
  (JNIEnv *, jclass, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
